driver
(
	name "PlayerSRV"
	plugin "libPlayerSRV.so"

	# port (device file) to which the surveyor is bound
	port "/dev/ttyUSB0"

	# possible interfaces to choose from:
	#    -position2d
	#    -camera
	#    -metrocam
	#    -blobfinder
	#    -ranger
	provides ["position2d:0" "metrocam:0" "blobfinder:0" "ranger:0"]

	# flags that control debugging output
	#    -debug_surveyor for high level surveyor diagnostic messages
	#    -debug_serial for low level serial communication messages
	debug_surveyor false
	debug_serial   false

	# exercise full control over surveyor's (hardware) response time
	#    -srv_min_timeout is the time in milliseconds allotted to low bandwidth commands
	#    -srv_max_timeout is the time in milliseconds allotted to high bandwidth commands
	#    -NOTE: for maximum compatability, srv_max_timeout should not be lower than 2600 ms
	#           because timed driving commands which are used for position2d goto functions
	#           can take up to 2.55 seconds to complete; otherwise, you should experiment
	#           with srv_min_timeout to find a balance between performance and reliability.
	srv_min_timeout  600
	srv_max_timeout 3000

	# exercise full control over the driver's (software) response time
	#    -min_cycle_time is the minimum time in seconds for each iteration of the driver's
	#           main loop; if an iteration completes ahead of time, the driver will go to sleep
	#    -command_timeout is the time in seconds allotted to each commmand; this differs from
	#           the hardware timeouts above in that the driver will try multiple times to
	#           execute a command before giving up. For example, suppose the driver receives
	#           a position2d velocity command. In order to successfully fulfill this request,
	#           the driver will use all the time allotted to it in command_timeout by repeatedly
	#           sending commands to the surveyor. Ideally, surveyor's (hardware) timeouts will
	#           be short enough so that a command will be sent multiple times before the
	#           command is abandoned. That said, for maximum compatibility, it is recommended
	#           that command_timeout be set to a value that is greater than the sum of
	#           srv_min_timeout and srv_max_timeout.
	min_cycle_time  0.01
	command_timeout 4.00

	# position2d interface options
	#    -linear_velocity is an array of ordered triples (a,b,c) where:
	#           -a is the velocity in meters/second
	#           -b is the intensity of the left motor on the surveyor
	#           -c is the intensity of the right motor on the surveyor
	#    -angular_velocity is an array of ordered triples (a,b,c) where:
	#           -a is the velocity in radians/second
	#           -b is the intensity of the left motor on the surveyor
	#           -c is the intensity of the right motor on the surveyor
	#    -NOTE: the purpose of these options is to interpolate the in-between values; the
	#           interpolation is done linearly, so having more entries in each array will
	#           increase the accuracy of the results. At the very least, it is recommended
	#           to supply a minimum and maximum value in both directions, i.e. a min/max
	#           for driving both forwards and backwards in linear_velocity and a min/max
	#           for turning both left and right in angular_velocity.
	linear_velocity  [-0.30    -127   -120
	                   0.00       0      0
	                   0.01      15     15
	                   0.06      20     20
	                   0.16      30     30
	                   0.21      40     40
	                   0.24      65     65
	                   0.30     127    127]
	angular_velocity [-3.14     127   -127
	                  -2.12      65    -65
	                   0.00       0      0
	                   2.12     -65     65
	                   3.00    -127    127]


	# camera/metrocam interface options
	#    -cam_min_cycle_time is the minimum time in seconds between each image capture
	#           that is returned by the surveyor's camera; sending image data is considered
	#           a high bandwidth command, so it is recommended not to use the standard
	#           camera interface, but rather to use metrocam instead so that image data
	#			can be requested manually only when needed. When using the metrocam interface,
	#           setting this to 0 (zero) will disable active camera streaming completely.
	#    -camera_size is the resolution of the image returned by the surveyor's camera;
	#           possible options are:
	#           -80x64
	#           -160x128
	#           -320x240
	#           -640x480
	#           -NOTE: in order to use the internal blobfinder interface, the camera_size
	#                  MUST be set to 160x128.
	cam_min_cycle_time 0.00
	camera_size "160x128"

	# blobfinder interface options
	#    -blobfinder_min_cycle_time is the minimum time in seconds between each snapshot
	#           of the blob data
	#           -NOTE: it is recommended to use blobfinder as the active vision on the
	#                  surveyor because, in comparison to sending image data, blob finding
	#                  is a relatively low bandwidth command. When used in conjunction with
	#                  metrocam, it is possible to only request image data when there are
	#                  interesting blobs within the current frame.
	#    -blobfinder_config_channels is an array of ordered triples (a,b,c) where:
	#           -a is the color channel (bin in surveyor terminology)
	#              -NOTE: the surveyor has a maximum of 16 color channels; the channels are
	#                     indexed in the range [0,15)
	#           -b is the color expressed in RGB as a hexadecimal string
	#           -c is the color expressed in YUV range as a hexadecimal string
	#              -NOTE: we recommend that you aqcuire the YUV ranges by using the
	#                     BlobConfig tool that is included with the driver
	blobfinder_min_cycle_time  0.01
	blobfinder_config_channels [0 "FF2100" "68AB3D6B9CC4"] # Orange-T on SRV10

	# ranger interface options
	#    -ir_min_cycle_time is the minimum time in seconds between each update of the
	#           surveyor's infrared sensor data.
	ir_min_cycle_time  1.00
)
